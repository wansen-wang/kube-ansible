---
# tasks file for etcd
- name: Add the group 'etcd'
  group:
    name: etcd
    state: present
    system: True

- name: Add the user 'etcd'
  user:
    name: etcd
    home: "{{ etcd.dataDir }}"
    comment: etcd service account
    create_home: False
    shell: /sbin/nologin
    system: True
    group: etcd

- name: Set OS dependent variables
  include_vars: "{{ DOWNLOAD_WAY }}.yml"

- name: Download binary
  get_url:
    url: "{{ download_url }}"
    dest: "/usr/local/src/etcd-v{{ ETCD_VERSION }}-linux-amd64.tar.gz"
    mode: 0644
    owner: root
    group: root
    url_password: "{{ NEXUS_HTTP_USERNAME }}"
    url_username: "{{ NEXUS_HTTP_PASSWORD }}"
    timeout: 3
  register: etcd_pkg
  until: etcd_pkg is succeeded
  retries: 10

- name: Extract Etcd
  unarchive:
    src: "/usr/local/src/etcd-v{{ ETCD_VERSION }}-linux-amd64.tar.gz"
    dest: /usr/local/bin
    remote_src: yes
    exclude:
      - Documentation
      - "README*"
    extra_opts:
      - --strip-components=1
  register: etcd_bin

- name: Create data directory
  file:
    name: "{{ etcd.dataDir }}"
    state: directory
    mode: 0700
    owner: etcd
    group: etcd

- name: Create certificate directory
  file:
    name: "/etc/kubernetes/pki/etcd"
    state: directory
    owner: etcd
    group: etcd

- name: Distribution CA certificate
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
  with_items:
    - {
        src: "/etc/ssl/kubernetes/etcd/ca.crt",
        dest: "/etc/kubernetes/pki/etcd/ca.crt"
      }
    - {
        src: "/etc/ssl/kubernetes/etcd/ca.key",
        dest: "/etc/kubernetes/pki/etcd/ca.key"
      }
  when: etcd_ca_key.changed or etcd_ca_crt.changed

- name: Generate etcd server private key
  community.crypto.openssl_privatekey:
    path: /etc/kubernetes/pki/etcd/server.key
    size: 2048
    mode: 0600
    owner: etcd
    group: root

- name: Generate etcd server csr
  community.crypto.openssl_csr:
    owner: etcd
    group: root
    path: /etc/kubernetes/pki/etcd/server.csr
    privatekey_path: /etc/kubernetes/pki/etcd/server.key
    common_name: "etcd-server"
    basic_constraints_critical: yes
    basic_constraints:
      - "CA:FALSE"
    key_usage_critical: yes
    key_usage:
      - digitalSignature
      - keyEncipherment
    extended_key_usage:
      - serverAuth
      - clientAuth
    subject_alt_name: 
      - "DNS:localhost"
      - "DNS:{{ ansible_hostname | lower }}"
      - "IP:127.0.0.1"
      - "IP:{{ ansible_default_ipv4.address }}"

- name: Generate etcd server certificate
  community.crypto.x509_certificate:
    path: /etc/kubernetes/pki/etcd/server.crt
    csr_path: /etc/kubernetes/pki/etcd/server.csr
    ownca_path: /etc/kubernetes/pki/etcd/ca.crt
    ownca_privatekey_path: /etc/kubernetes/pki/etcd/ca.key
    provider: ownca
    mode: 0644
    owner: etcd
    group: root
  when: etcd_ca_key.changed or etcd_ca_crt.changed

- name: Generate etcd peer private key
  community.crypto.openssl_privatekey:
    path: /etc/kubernetes/pki/etcd/peer.key
    size: 2048
    mode: 0600
    owner: etcd
    group: root

- name: Generate etcd peer csr
  community.crypto.openssl_csr:
    owner: etcd
    group: root
    path: /etc/kubernetes/pki/etcd/peer.csr
    privatekey_path: /etc/kubernetes/pki/etcd/peer.key
    common_name: "etcd-peer"
    basic_constraints_critical: yes
    basic_constraints:
      - "CA:FALSE"
    key_usage_critical: yes
    key_usage:
      - digitalSignature
      - keyEncipherment
    extended_key_usage:
      - serverAuth
      - clientAuth
    subject_alt_name: 
      - "DNS:localhost"
      - "DNS:{{ ansible_hostname | lower }}"
      - "IP:127.0.0.1"
      - "IP:{{ ansible_default_ipv4.address }}"

- name: Generate etcd peers certificate
  community.crypto.x509_certificate:
    path: /etc/kubernetes/pki/etcd/peer.crt
    csr_path: /etc/kubernetes/pki/etcd/peer.csr
    ownca_path: /etc/kubernetes/pki/etcd/ca.crt
    ownca_privatekey_path: /etc/kubernetes/pki/etcd/ca.key
    provider: ownca
    mode: 0644
    owner: etcd
    group: root
  when: etcd_ca_key.changed or etcd_ca_crt.changed

- name: Generate etcd healthcheck private key
  community.crypto.openssl_privatekey:
    path: /etc/kubernetes/pki/etcd/healthcheck-client.key
    size: 2048
    mode: 0600
    owner: etcd
    group: root

- name: Generate etcd healthcheck csr
  community.crypto.openssl_csr:
    owner: etcd
    group: root
    path: /etc/kubernetes/pki/etcd/healthcheck-client.csr
    privatekey_path: /etc/kubernetes/pki/etcd/healthcheck-client.key
    common_name: "etcd-client"
    basic_constraints_critical: yes
    basic_constraints:
      - "CA:FALSE"
    key_usage_critical: yes
    key_usage:
      - digitalSignature
      - keyEncipherment
    extended_key_usage:
      - serverAuth
      - clientAuth
    subject_alt_name: 
      - "DNS:localhost"
      - "DNS:{{ ansible_hostname | lower }}"
      - "IP:127.0.0.1"
      - "IP:{{ ansible_default_ipv4.address }}"

- name: Generate etcd healthcheck certificate
  community.crypto.x509_certificate:
    path: /etc/kubernetes/pki/etcd/healthcheck-client.crt
    csr_path: /etc/kubernetes/pki/etcd/healthcheck-client.csr
    ownca_path: /etc/kubernetes/pki/etcd/ca.crt
    ownca_privatekey_path: /etc/kubernetes/pki/etcd/ca.key
    provider: ownca
    mode: 0644
    owner: etcd
    group: root

- name: Install systemd file
  template:
    src: etcd.service.j2
    dest: /etc/systemd/system/etcd.service
  register: etcd_systemd

- name: Backup data
  shell: |
    NAME=$(date +%s)
    ETCDCTL_API=3 /usr/local/bin/etcdctl --command-timeout=3s --endpoints {{ ansible_default_ipv4.address }}:2379 --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key snapshot save /tmp/kubernetes-etcd.${NAME}.db
  ignore_errors: True

- name: Start the service
  systemd:
    name: etcd
    state: restarted
    enabled: yes
    daemon_reload: yes
  register: etcd_service
  when: etcd_pkg.changed or etcd_systemd.changed

- name: Wait for etcd
  wait_for:
    port: 2379
    delay: 15
    state: started
    host: "{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}"
  connection: local
  when: etcd_service.changed

- name: Install health check command
  template:
    src: etcd-check.j2
    dest: /usr/local/bin/etcd-check
    mode: 755

- name: Health check
  shell: |
    ETCDCTL_API=3 /usr/local/bin/etcdctl --endpoints {{ ansible_default_ipv4.address }}:2379 --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key endpoint health
  when: etcd_service.changed

- name: Install Backup command
  template:
    src: etcd-backup.j2
    dest: /usr/local/bin/etcd-backup
    mode: 755

- name: Create backup kubernetes etcd data in cron
  cron:
    name: "backup kubernetes etcd data by kube-ansible"
    minute: "0"
    hour: "2"
    job: "/usr/local/bin/etcd-backup"
