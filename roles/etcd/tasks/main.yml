---
# tasks file for etcd
- name: Install the binary
  copy: 
    src: '{{ item }}'
    dest: /usr/local/bin/
    mode: 0755
  with_items:
    - etcd
    - etcdctl
  register: etcd_bin

- name: Create data directory
  file: 
    name: '{{ kubernetes.etcd.datadir }}'
    recurse: yes
    state: directory
    mode: 0700

- name: Create certificate directory
  file: 
    name: '{{ kubernetes.ssl.location }}/etcd'
    recurse: yes
    state: directory

- name: Distribution of certificate
  copy: 
    src: '{{ item }}'
    dest: '{{ kubernetes.ssl.location }}/etcd'
    mode: 0644
  with_items:
    - '/etc/ssl/{{ kubernetes.project }}/etcd/ca.crt'
    - '/etc/ssl/{{ kubernetes.project }}/etcd/ca.key'

- name: Check etcd server certificate expired(30 days)
  shell: |
    [ -f etcd/server.crt ] && 
    openssl x509 -in etcd/server.crt -noout -text -checkend 2592000
  register: etcd_server_certificate_expired
  ignore_errors: True
  args:
    chdir: '{{ kubernetes.ssl.location }}'
    executable: /bin/bash

- name: Create etcd server certificate
  shell: |
    openssl genrsa -out etcd/server.key 2048 && \
    openssl req -new -key etcd/server.key -subj "/CN=etcd-server" -out etcd/server.csr && \
    openssl x509 -in etcd/server.csr -req -CA etcd/ca.crt -CAkey etcd/ca.key -CAcreateserial -extensions v3_req_etcd -extfile openssl.cnf -out etcd/server.crt -days {{ kubernetes.ssl.days | default(3652) }}
  args:
    chdir: '{{ kubernetes.ssl.location }}'
    executable: /bin/bash
  register: etcd_server_certificate
  when: etcd_server_certificate_expired.rc != 0


- name: Check etcd peer certificate expired(30 days)
  shell: |
    [ -f etcd/peer.crt ] && 
    openssl x509 -in etcd/peer.crt -noout -text -checkend 2592000
  register: etcd_peer_certificate_expired
  ignore_errors: True
  args:
    chdir: '{{ kubernetes.ssl.location }}'
    executable: /bin/bash

- name: Create etcd peer certificate
  shell: |
    openssl genrsa -out etcd/peer.key 2048 && \
    openssl req -new -key etcd/peer.key -subj "/CN=etcd-peer" -out etcd/peer.csr && \
    openssl x509 -in etcd/peer.csr -req -CA etcd/ca.crt -CAkey etcd/ca.key -CAcreateserial -extensions v3_req_etcd -extfile openssl.cnf -out etcd/peer.crt -days {{ kubernetes.ssl.days | default(3652) }}
  args:
    chdir: '{{ kubernetes.ssl.location }}'
    executable: /bin/bash
  register: etcd_peer_certificate
  when: etcd_peer_certificate_expired.rc != 0

- name: Check etcd healthcheck certificate expired(30 days)
  shell: |
    [ -f etcd/healthcheck-client.crt ] && 
    openssl x509 -in etcd/healthcheck-client.crt -noout -text -checkend 2592000
  register: etcd_healthcheck_certificate_expired
  ignore_errors: True
  args:
    chdir: '{{ kubernetes.ssl.location }}'
    executable: /bin/bash

- name: Create etcd healthcheck client
  shell: |
    openssl genrsa -out etcd/healthcheck-client.key 2048 && \
    openssl req -new -key etcd/healthcheck-client.key -subj "/CN=etcd-client" -out etcd/healthcheck-client.csr && \
    openssl x509 -in etcd/healthcheck-client.csr -req -CA etcd/ca.crt -CAkey etcd/ca.key -CAcreateserial -extensions v3_req_etcd -extfile openssl.cnf -out etcd/healthcheck-client.crt -days {{ kubernetes.ssl.days | default(3652) }}
  args:
    chdir: '{{ kubernetes.ssl.location }}'
    executable: /bin/bash
  when: etcd_healthcheck_certificate_expired.rc != 0

- name: Install systemd file
  template: 
    src: etcd.service.j2
    dest: /etc/systemd/system/etcd.service
  register: etcd_systemd

- name: Backup data
  shell: |
    NAME=$(date +%s)
    ETCDCTL_API=3 /usr/local/bin/etcdctl --command-timeout=3s --endpoints {{ ansible_default_ipv4.address }}:2379 --cacert {{ kubernetes.ssl.location }}/etcd/ca.crt --cert {{ kubernetes.ssl.location }}/etcd/server.crt --key {{ kubernetes.ssl.location }}/etcd/server.key snapshot save /tmp/kubernetes-etcd.${NAME}.db
  ignore_errors: True

- name: Start the service
  systemd:
    name: etcd
    state: restarted
    enabled: yes
    daemon_reload: yes
  register: etcd_service
  when: etcd_bin.changed or etcd_server_certificate.changed or etcd_peer_certificate.changed or etcd_systemd.changed

- name: Wait for etcd
  wait_for:
    port: 2379
    delay: 15
    state: started
    host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
  connection: local
  when: etcd_service.changed

- name: Install health check command
  template: 
    src: etcd-check.j2
    dest: /usr/local/bin/etcd-check
    mode: 755

- name: Health check
  shell: |
    ETCDCTL_API=3 /usr/local/bin/etcdctl --endpoints {{ ansible_default_ipv4.address }}:2379 --cacert {{ kubernetes.ssl.location }}/etcd/ca.crt --cert {{ kubernetes.ssl.location }}/etcd/server.crt --key {{ kubernetes.ssl.location }}/etcd/server.key endpoint health
  when: etcd_service.changed