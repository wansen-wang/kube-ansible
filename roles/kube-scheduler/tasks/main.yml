---
- name: Set OS dependent variables
  include_vars: '{{ DOWNLOAD_WAY }}.yml'

- name: Download binary
  get_url:
    url: "{{ download_url }}"
    dest: /usr/local/bin/kube-scheduler
    force: true
    mode: 0755
    owner: root
    group: root
    url_password: "{{ NEXUS_HTTP_USERNAME }}"
    url_username: "{{ NEXUS_HTTP_PASSWORD }}"
    timeout: 3
  register: kube_scheduler_pkg
  until: kube_scheduler_pkg is succeeded
  retries: 5

- name: Create ssl directory
  file: 
    name: '{{ item }}'
    state: directory
    mode: '0755'
  with_items:
    - '{{ kubernetes.ssl.location }}'

- name: Distribution certificate
  copy: 
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: root
    group: root
    mode: '{{ item.mode }}'
  with_items:
    - { src: '/etc/ssl/{{ kubernetes.project }}/ca.crt', dest: '{{ kubernetes.ssl.location }}/ca.crt', mode: 644 }
    - { src: '/etc/ssl/{{ kubernetes.project }}/ca.key', dest: '{{ kubernetes.ssl.location }}/ca.key', mode: 600 }

- name: Check kube-scheduler certificate expired(30 days)
  community.crypto.openssl_certificate:
    path: '{{ kubernetes.ssl.location }}/kube-scheduler.crt'
    provider: assertonly
    valid_in: "2592000"
  ignore_errors: yes
  register: kube_scheduler_certificate_expired
- name: Create kube-scheduler certificate
  shell: |
    openssl genrsa -out kube-scheduler.key 2048 && \
    openssl req -new -key kube-scheduler.key -subj "/CN=system:kube-scheduler/O=system:kube-scheduler" -out kube-scheduler.csr && \
    openssl x509 -req -in kube-scheduler.csr -CA ca.crt -CAkey ca.key -CAcreateserial -extensions v3_req_client -extfile openssl.cnf -out kube-scheduler.crt -days {{ kubernetes.ssl.days | default(3652) }}
  args:
    chdir: '{{ kubernetes.ssl.location }}'
    executable: /bin/bash
  register: kube_scheduler_certificate
  when: kube_scheduler_certificate_expired.failed

- name: Create kubeconfig
  shell: |
    {% set KUBE_APISERVER_ADDR, KUBE_APISERVER_PORT = ansible_default_ipv4.address, 6443 %}
    {% if inventory_hostname in groups['master'] %}
      {% set KUBE_APISERVER_ADDR, KUBE_APISERVER_PORT = ansible_default_ipv4.address, 6443 %}
    {% else %}
      {% if kubernetes.ha.vip is defined %}
        {% if kubernetes.cloud.type == "local" %}
          {% set KUBE_APISERVER_ADDR, KUBE_APISERVER_PORT = kubernetes.ha.vip, 8443 %}
        {% else %}
           {% set KUBE_APISERVER_ADDR, KUBE_APISERVER_PORT = kubernetes.ha.vip, 6443 %}
        {% endif %}
      {% else %}
        {% set KUBE_APISERVER_ADDR, KUBE_APISERVER_PORT = hostvars[groups['master'][0]].inventory_hostname, 6443 %}
      {% endif %}
    {% endif %}

    /usr/local/bin/kubectl config set-cluster {{ kubernetes.name | default("kubernetes") }} \
      --embed-certs=true \
      --certificate-authority={{ kubernetes.ssl.location }}/ca.crt \
      --server=https://{{ KUBE_APISERVER_ADDR }}:{{ KUBE_APISERVER_PORT }} \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    /usr/local/bin/kubectl config set-credentials {{ item.KUBE_USER }} \
      --embed-certs=true \
      --client-certificate={{ kubernetes.ssl.location }}/{{ item.KUBE_CERT }}.crt \
      --client-key={{ kubernetes.ssl.location }}/{{ item.KUBE_CERT }}.key \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    /usr/local/bin/kubectl config set-context {{ item.KUBE_USER }}@{{ kubernetes.name | default("kubernetes") }} \
      --cluster={{ kubernetes.name | default("kubernetes") }} \
      --user={{ item.KUBE_USER }} \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    /usr/local/bin/kubectl config use-context {{ item.KUBE_USER }}@{{ kubernetes.name | default("kubernetes") }} --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}
  with_items:
    - { KUBE_USER: 'system:kube-scheduler', KUBE_CERT: "kube-scheduler", KUBE_CONFIG: 'kube-scheduler.kubeconfig'}
  register: kube_scheduler_kubeconfig
  when: kube_scheduler_certificate.changed

- name: Change file permissions
  file:
    path: /etc/kubernetes/kube-scheduler.kubeconfig
    mode: '0644'

- name: Install systemd file
  template: 
    src: kube-scheduler.service.j2
    dest: /etc/systemd/system/kube-scheduler.service
  register: kube_scheduler_systemd

- name: Start the service
  systemd:
    name: kube-scheduler
    state: restarted
    enabled: yes
    daemon_reload: yes
  register: kube_scheduler_service
  when: kube_scheduler_pkg.changed or kube_scheduler_certificate.changed or kube_scheduler_kubeconfig.changed or kube_scheduler_systemd.changed

- name: Waiting for the service
  wait_for:
    port: 10251
    delay: 30
    state: started
  when: kube_scheduler_service.changed

- name: Health check
  uri: 
    url: 'http://{% if kubernetes.scheduler.bind != "0.0.0.0" %}127.0.0.1{% else %}{{ ansible_default_ipv4.address }}{% endif %}:10251/healthz'
    validate_certs: no
    return_content: yes
  register: this
  until: "'ok' in this.content"
  retries: 30
  delay: 1
  when: kube_scheduler_service.changed