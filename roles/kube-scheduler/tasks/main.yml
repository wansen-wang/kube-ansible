---
- name: Set OS dependent variables
  include_vars: "{{ DOWNLOAD_WAY }}.yml"

- name: Download binary
  get_url:
    url: "{{ download_url }}"
    dest: /usr/local/bin/kube-scheduler
    force: true
    mode: 0755
    owner: root
    group: root
    url_password: "{{ NEXUS_HTTP_USERNAME }}"
    url_username: "{{ NEXUS_HTTP_PASSWORD }}"
    timeout: 3
  register: kube_scheduler_pkg
  until: kube_scheduler_pkg is succeeded
  retries: 10

- name: Create certificate directory
  file:
    name: /etc/kubernetes/pki
    state: directory

- name: Distribution certificate
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  with_items:
    - {
        src: "/etc/ssl/kubernetes/ca.crt",
        dest: "/etc/kubernetes/pki/ca.crt",
        mode: 644,
      }
    - {
        src: "/etc/ssl/kubernetes/ca.key",
        dest: "/etc/kubernetes/pki/ca.key",
        mode: 600,
      }

- name: Generate kube-scheduler private key
  community.crypto.openssl_privatekey:
    path: /etc/kubernetes/pki/kube-scheduler.key
    size: 2048
    mode: 0600

- name: Generate kube-scheduler csr
  community.crypto.openssl_csr:
    path: /etc/kubernetes/pki/kube-scheduler.csr
    privatekey_path: /etc/kubernetes/pki/kube-scheduler.key
    common_name: "system:kube-scheduler"
    organization_name: "system:kube-scheduler"
    basic_constraints_critical: yes
    basic_constraints:
      - "CA:FALSE"
    key_usage_critical: yes
    key_usage:
      - digitalSignature
      - keyEncipherment
    extended_key_usage:
      - clientAuth
  notify: Clean kube-scheduler csr

- name: Generate kube-scheduler certificate
  community.crypto.x509_certificate:
    path: /etc/kubernetes/pki/kube-scheduler.crt
    csr_path: /etc/kubernetes/pki/kube-scheduler.csr
    ownca_path: /etc/kubernetes/pki/ca.crt
    ownca_privatekey_path: /etc/kubernetes/pki/ca.key
    provider: ownca
    mode: 0644

- name: Create kubeconfig
  template:
    src: kube-scheduler.kubeconfig.j2
    dest: /etc/kubernetes/kube-scheduler.kubeconfig
    mode: 0600

- name: Install systemd file
  template:
    src: kube-scheduler.service.j2
    dest: /etc/systemd/system/kube-scheduler.service

- name: Start the service
  systemd:
    name: kube-scheduler
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Waiting for the service
  wait_for:
    port: 10259
    delay: 30
    state: started

- name: Health check
  uri:
    url: 'https://127.0.0.1:10259/healthz'
    validate_certs: no
    return_content: yes
    client_cert: "/etc/kubernetes/pki/kube-scheduler.crt"
    client_key: "/etc/kubernetes/pki/kube-scheduler.key"
  register: this
  until: 
    - "'ok' in this.content"
    - this.status == 200
  retries: 120
  delay: 1
