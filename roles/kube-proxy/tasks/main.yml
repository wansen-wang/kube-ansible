---
# tasks file for kube-proxy
- name: Install the binary
  copy: 
    src: '{{ item }}'
    dest: /usr/local/bin/
    mode: 0755
    owner: root
    group: root
  with_items:
    - kube-proxy
  register: kube_proxy_bin

- name: Create log directory
  file: 
    name: '{{ kubernetes.proxy.log.logDir }}'
    state: directory
    mode: '0755'

- name: Configuration logrotate
  template: 
    src: kube-proxy.logrotate.j2
    dest: /etc/logrotate.d/kube-proxy

- name: Create ssl directory
  file: 
    name: '{{ item }}'
    state: directory
    mode: '0755'
  with_items:
    - '{{ kubernetes.ssl.location }}'

- name: Distribution of certificate
  copy: 
    src: '{{ item }}'
    dest: '{{ kubernetes.ssl.location }}'
    owner: root
    group: root
    mode: 0644
  with_items:
    - '/etc/ssl/{{ kubernetes.project }}/ca.crt'
    - '/etc/ssl/{{ kubernetes.project }}/ca.key'

- name: Check kube-proxy certificate expired(30 days)
  shell: |
    [ -f kube-proxy.crt ] && 
    openssl x509 -in kube-proxy.crt -noout -text -checkend 2592000
  register: kube_proxy_certificate_expired
  ignore_errors: True
  args:
    chdir: '{{ kubernetes.ssl.location }}'
    executable: /bin/bash

- name: Create kube-proxy certificate
  shell: |
    openssl genrsa -out kube-proxy.key 2048 && \
    openssl req -new -key kube-proxy.key -subj "/CN=system:kube-proxy/O=system:node-proxier" -out kube-proxy.csr && \
    openssl x509 -req -in kube-proxy.csr -CA ca.crt -CAkey ca.key -CAcreateserial -extensions v3_req_client -extfile openssl.cnf -out kube-proxy.crt -days {{ kubernetes.ssl.days | default(3652) }}
  args:
    chdir: '{{ kubernetes.ssl.location }}'
    executable: /bin/bash
  register: kube_proxy_certificate
  when: kube_proxy_certificate_expired.rc != 0

- name: Create kubeconfig
  shell: |
    /usr/local/bin/kubectl config set-cluster {{ kubernetes.name | default("kubernetes") }} \
      --embed-certs=true \
      --certificate-authority={{ kubernetes.ssl.location }}/ca.crt \
      --server="https://{{ ansible_default_ipv4.address }}" \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    /usr/local/bin/kubectl config set-credentials {{ item.KUBE_USER }} \
      --embed-certs=true \
      --client-certificate={{ kubernetes.ssl.location }}/{{ item.KUBE_CERT }}.crt \
      --client-key={{ kubernetes.ssl.location }}/{{ item.KUBE_CERT }}.key \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    /usr/local/bin/kubectl config set-context {{ kubernetes.name | default("kubernetes") }} \
      --cluster={{ kubernetes.name | default("kubernetes") }} \
      --user={{ item.KUBE_USER }} \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    /usr/local/bin/kubectl config use-context {{ kubernetes.name | default("kubernetes") }} --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}
  with_items:
    - { KUBE_USER: 'kube-proxy', KUBE_CERT: 'kube-proxy', KUBE_CONFIG: 'kube-proxy.kubeconfig' }
  register: kube_proxy_kubeconfig
  when: kube_proxy_certificate.changed

- name: Change file permissions
  file:
    path: /etc/kubernetes/kube-proxy.kubeconfig
    mode: '0644'

- name: Install config file
  template: 
    src: kube-proxy.yaml.j2
    dest: /etc/kubernetes/kube-proxy.yaml
  register: kube_proxy_conf

- name: Install systemd file
  template: 
    src: kube-proxy.service.j2
    dest: /etc/systemd/system/kube-proxy.service
  register: kube_proxy_systemd

- name: Start the service
  systemd:
    name: kube-proxy
    state: restarted
    enabled: yes
    daemon_reload: yes
  register: kube_proxy_service
  when: kube_proxy_bin.changed or kube_proxy_certificate.changed or kube_proxy_kubeconfig.changed or kube_proxy_systemd.changed

# - name: Waiting for the service
#   wait_for:
#     port: 10256
#     delay: 30
#     state: started

- name: Health check
  uri: 
    url: 'http://{% if kubernetes.controllerManager.bind != "0.0.0.0" %}127.0.0.1{% else %}{{ ansible_default_ipv4.address }}{% endif %}:10256/healthz'
    validate_certs: no
  register: this
  until: this.status == 200
  retries: 30
  delay: 5
  connection: local
  when: kube_proxy_service.changed

# - name: Clean kube-proxy ca and crb yml file
#   file:
#     path: '/etc/kubernetes/{{ item }}'
#     state: absent
#   run_once: true
#   with_items:
#     - kube-proxy-crb.yml
#     - kube-proxy-sa.yml
#   when: inventory_hostname in groups['master']