---
# tasks file for kube-proxy
- name: Install the binary
  copy: 
    src: '{{ item }}'
    dest: /usr/local/bin/
    mode: 0755
    owner: root
    group: root
  with_items:
    - kube-proxy

- name: Create log directory
  file: 
    name: '{{ kubernetes.proxy.log.logDir }}'
    state: directory
    mode: '0755'

- name: Create ssl directory
  file: 
    name: '{{ item }}'
    state: directory
    mode: '0755'
  with_items:
    - '{{ kubernetes.ssl.location }}'

- name: Distribution of certificate
  copy: 
    src: '{{ item }}'
    dest: '{{ kubernetes.ssl.location }}'
    owner: root
    group: root
    mode: 0644
  with_items:
    - '/etc/ssl/{{ kubernetes.project }}/ca.crt'

- name: Create kube-proxy sa crb --- part.1
  copy: 
    src: '{{ item }}'
    dest: '/etc/kubernetes/{{ item }}'
  run_once: true
  with_items:
    - kube-proxy-crb.yml
    - kube-proxy-sa.yml
  when: inventory_hostname in groups['master']

- name: Create kube-proxy sa crb --- part.2
  command: 'kubectl apply -f /etc/kubernetes/{{ item }}'
  run_once: true
  with_items:
    - kube-proxy-crb.yml
    - kube-proxy-sa.yml
  when: inventory_hostname in groups['master']

- name: Register jwt token
  shell: |
    secret=$(kubectl -n kube-system get sa kube-proxy --output=jsonpath='{.secrets[0].name}')
    kubectl -n kube-system get secret/${secret} --output=jsonpath='{.data.token}' | base64 -d
  register: JWT_TOKEN

- name: Create kubeconfig
  shell: |
    {% set KUBE_APISERVER_ADDR, KUBE_APISERVER_PORT = ansible_default_ipv4.address, 6443 %}
    {% if kubernetes.ha is defined %}
      {% if inventory_hostname in groups['master'] %}
        {% if kubernetes.cloud.type == "local" and groups['master'] | length > 1 %}
            {% set KUBE_APISERVER_ADDR, KUBE_APISERVER_PORT = kubernetes.ha.vip, 8443 %}
        {% else %}
          {% if kubernetes.cloud.type == "local"  %}
            {% set KUBE_APISERVER_ADDR, KUBE_APISERVER_PORT = ansible_default_ipv4.address, 6443 %}
          {% else %}
            {% set KUBE_APISERVER_ADDR, KUBE_APISERVER_PORT = kubernetes.ha.vip, 6443 %}
          {% endif %}
        {% endif %}
      {% else %}
        {% set KUBE_APISERVER_ADDR, KUBE_APISERVER_PORT = hostvars[groups['master'][0]].inventory_hostname, 6443 %}
      {% endif %}
    {% else %}
      {% if inventory_hostname in groups['master'] %}
        {% set KUBE_APISERVER_ADDR, KUBE_APISERVER_PORT = ansible_default_ipv4.address, 6443 %}
      {% else %}
        {% set KUBE_APISERVER_ADDR, KUBE_APISERVER_PORT = hostvars[groups['master'][0]].inventory_hostname, 6443 %}
      {% endif %}
    {% endif %}

    kubectl config set-cluster {{ kubernetes.name | default("kubernetes") }} \
      --embed-certs=true \
      --certificate-authority={{ kubernetes.ssl.location }}/ca.crt \
      --server=https://{{ KUBE_APISERVER_ADDR }}:{{ KUBE_APISERVER_PORT }} \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    kubectl config set-context {{ kubernetes.name | default("kubernetes") }} \
      --cluster={{ kubernetes.name | default("kubernetes") }} \
      --user={{ kubernetes.name | default("kubernetes") }} \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    kubectl config set-credentials {{ kubernetes.name | default("kubernetes") }} \
      --token={{ JWT_TOKEN.stdout }} \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    kubectl config use-context {{ kubernetes.name | default("kubernetes") }} --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}
  with_items:
    - { KUBE_CONFIG: 'proxy.conf'}

- name: Change file permissions
  file:
    path: /etc/kubernetes/proxy.conf
    mode: '0644'

- name: Install config file
  template: 
    src: kube-proxy.conf.j2
    dest: /etc/kubernetes/kube-proxy.conf

- name: Install systemd file
  template: 
    src: kube-proxy.service.j2
    dest: /etc/systemd/system/kube-proxy.service

- name: Start the service
  systemd:
    name: kube-proxy
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Clean kube-proxy ca and crb yml file
  file:
    path: '/etc/kubernetes/{{ item }}'
    state: absent
  run_once: true
  with_items:
    - kube-proxy-crb.yml
    - kube-proxy-sa.yml
  when: inventory_hostname in groups['master']