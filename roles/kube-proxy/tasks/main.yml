---
# tasks file for kube-proxy
- name: Install the binary
  copy: 
    src: '{{ item }}'
    dest: /usr/local/bin/
    mode: 0755
    owner: root
    group: root
  with_items:
    - kube-proxy

- name: Create log directory
  file: 
    name: '{{ kubernetes.proxy.log.logDir }}'
    state: directory
    mode: '0755'

- name: Register secret
  shell: |
    kubectl -n kube-system get sa kube-proxy --output=jsonpath='{.secrets[0].name}'
  register: SECRET
  run_once: true

- name: Register jwt token
  command: "kubectl -n kube-system get secret {{ SECRET.stdout }} --output=jsonpath='{.data.token}' | base64 -d"
  register: JWT_TOKEN
  run_once: true

- name: Create kubeconfig
  shell: |
    kubectl config set-cluster {{ kubernetes.name }} \
      --certificate-authority={{ ca.kubernetes.location }}/ca.crt \
      --server=https://{{ ansible_default_ipv4.address }}:6443 \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    kubectl config set-context {{ kubernetes.name }} \
      --cluster={{ kubernetes.name }} \
      --user={{ kubernetes.name }} \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    kubectl config set-credentials {{ kubernetes.name }} \
      --token={{ JWT_TOKEN.stdout }} \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    kubectl config use-context {{ kubernetes.name }} --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}
  with_items:
    - { KUBE_CONFIG: 'kube-proxy.kubeconfig'}

- name: Install config file
  template: 
    src: kube-proxy.conf.j2
    dest: /etc/kubernetes/kube-proxy.conf

- name: Install systemd file
  template: 
    src: kube-proxy.service.j2
    dest: /etc/systemd/system/kube-proxy.service