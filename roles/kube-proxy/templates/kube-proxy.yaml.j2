{% set AllNode=[] %}
{% for host in groups['all'] %}
{% if hostvars[host].ansible_default_ipv4.netmask == "255.255.0.0" %}
    {{ AllNode.append( hostvars[host].inventory_hostname + '/16') }}
{% elif hostvars[host].ansible_default_ipv4.netmask == "255.255.255.0" %}
    {{ AllNode.append(hostvars[host].inventory_hostname + '/24') }}
{% endif %}
{% endfor %}
apiVersion: kubeproxy.config.k8s.io/v1alpha1
bindAddress: {{ ansible_default_ipv4.address }}
clientConnection:
    acceptContentTypes: ""
    burst: 10
    contentType: application/vnd.kubernetes.protobuf
    kubeconfig: /etc/kubernetes/kube-proxy.kubeconfig
    qps: 5
clusterCIDR: "{{ kubernetes.settings.PodCIDR }}"
configSyncPeriod: 15m0s
conntrack:
    max: null
    maxPerCore: 32768
    min: 131072
    tcpCloseWaitTimeout: 1h0m0s
    tcpEstablishedTimeout: 24h0m0s
enableProfiling: false
healthzBindAddress: {{ ansible_default_ipv4.address }}:10256
# hostnameOverride: {{ hostvars[inventory_hostname].ansible_fqdn | lower }}
iptables:
    masqueradeAll: true
    masqueradeBit: 14
    minSyncPeriod: 0s
    syncPeriod: 30s
ipvs:
    excludeCIDRs: {{ AllNode }}
    minSyncPeriod: 0s
    scheduler: ""
    syncPeriod: 30s
kind: KubeProxyConfiguration
metricsBindAddress: {{ ansible_default_ipv4.address }}:10249
mode: "ipvs"
nodePortAddresses: null
oomScoreAdj: -999
portRange: ""
resourceContainer: /kube-proxy
udpIdleTimeout: 250ms