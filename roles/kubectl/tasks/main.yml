---
# tasks file for kubectl
- name: Install the binary
  copy: 
    src: '{{ item }}'
    dest: /usr/local/bin/
    mode: 0755
    owner: root
    group: root
  with_items:
    - kubectl

- name: Create data directory
  file: 
    name: '{{ item }}'
    state: directory
    mode: '0755'
  with_items:
    - /etc/kubernetes

- name: Install kubectl completion
  copy: 
    src: kubectl.sh
    dest: /etc/bash_completion.d/kubectl.sh
    mode: 0755
    owner: root
    group: root

- name: Create data directory
  file: 
    name: '{{ item }}'
    state: directory
    mode: '0755'
  with_items:
    - '{{ca.kubernetes.location }}'

- name: Distribution of certificate
  copy: 
    src: '{{ item }}'
    dest: '{{ca.kubernetes.location }}'
    owner: root
    group: root
  with_items:
    - '{{ca.kubernetes.location }}/ca.crt'
    - '{{ca.kubernetes.location }}/admin.crt'
    - '{{ca.kubernetes.location }}/admin.key'

- name: Create kubeconfig
  shell: |
    kubectl config set-cluster {{ kubernetes.name | default("kubernetes") }} \
      --certificate-authority={{ ca.kubernetes.location }}/ca.crt \
      --server=https://{% if groups['master'] | length !=1 %}{{ kubernetes.ha.vip }}:8443{% else %}{{ hostvars[groups['master'][0]].inventory_hostname }}:6443{% endif %} \
      --embed-certs=true \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    kubectl config set-credentials {{ item.KUBE_USER }} \
      --client-certificate={{ ca.kubernetes.location }}/{{ item.KUBE_CERT }}.crt \
      --client-key={{ ca.kubernetes.location }}/{{ item.KUBE_CERT }}.key \
      --embed-certs=true \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    kubectl config set-context {{ item.KUBE_USER }}@{{ kubernetes.name | default("kubernetes") }} \
      --cluster={{ kubernetes.name | default("kubernetes") }} \
      --user={{ item.KUBE_USER }} \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}

    kubectl config use-context {{ item.KUBE_USER }}@{{ kubernetes.name | default("kubernetes") }} --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}
  with_items:
    - { KUBE_USER: 'kubernetes-admin', KUBE_CERT: "admin", KUBE_CONFIG: 'admin.kubeconfig'}
  # when: inventory_hostname in groups['master']

# - name: Create user kube directory
#   file: 
#     name: ~/.kube/
#     state: directory
#     mode: '0755'

# - name: Create user kube config
#   copy: 
#     src: /etc/kubernetes/admin.kubeconfig
#     dest: ~/.kube/config
#     remote_src: yes
#   when: inventory_hostname in groups['master']

# - name: Create user kube directory
#   copy: 
#     src: /etc/kubernetes/admin.kubeconfig
#     dest: ~/.kube/config
#   when: inventory_hostname in groups['worker']