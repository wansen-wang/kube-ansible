---
# tasks file for kube-apiserver
- name: Install the binary
  copy: 
    src: '{{ item }}'
    dest: /usr/local/bin/
    mode: 0755
    owner: root
    group: root
  with_items:
    - kube-apiserver
  register: bin_file

- name: Create log directory
  file: 
    name: '{{ kubernetes.apiserver.log.logDir }}'
    state: directory
    mode: '0755'

- name: Create data directory
  file: 
    name: '{{ item }}'
    state: directory
    mode: '0755'
  with_items:
    - '{{ca.kubernetes.location }}'
    - '{{ca.kubernetes.location }}/etcd'

- name: Distribution of etcd certificate
  copy: 
    src: '{{ item }}'
    dest: '{{ca.kubernetes.location }}/etcd'
    owner: root
    group: root
  with_items:
    - '{{ca.kubernetes.location }}/etcd/ca.crt'
  register: etcd_ca_file

- name: Distribution of certificate
  copy: 
    src: '{{ item }}'
    dest: '{{ca.kubernetes.location }}'
    owner: root
    group: root
  with_items:
    - '{{ca.kubernetes.location }}/ca.crt'
    - '{{ca.kubernetes.location }}/apiserver-etcd-client.crt'
    - '{{ca.kubernetes.location }}/apiserver-etcd-client.key'
    - '{{ca.kubernetes.location }}/apiserver-kubelet-client.crt'
    - '{{ca.kubernetes.location }}/apiserver-kubelet-client.key'
    - '{{ca.kubernetes.location }}/sa.pub'
    - '{{ca.kubernetes.location }}/sa.crt'
    - '{{ca.kubernetes.location }}/apiserver.crt'
    - '{{ca.kubernetes.location }}/apiserver.key'
    - '{{ca.kubernetes.location }}/front-proxy-ca.crt'
    - '{{ca.kubernetes.location }}/front-proxy-client.crt'
    - '{{ca.kubernetes.location }}/front-proxy-client.key'
    - '{{ca.kubernetes.location }}/admin.crt'
    - '{{ca.kubernetes.location }}/admin.key'
  register: ca_file

- name: Install systemd file
  template: 
    src: kube-apiserver.service.j2
    dest: /etc/systemd/system/kube-apiserver.service
  register: systemd_file

- name: Start the service
  systemd:
    name: kube-apiserver
    state: restarted
    enabled: yes
    daemon_reload: yes
  when: etcd_ca_file.changed or ca_file.changed or bin_file.changed or systemd_file.changed

- name: Wait ApiServer
  wait_for:
    port: 6443
    delay: 30
    state: started
    host: '{{ ansible_ssh_host }}'
  when: systemd_file.changed

- name: Health check
  uri: 
    url: https://{% if groups['master'] | length !=1 %}{{ kubernetes.ha.vip }}:8443{% else %}{{ hostvars[groups['master'][0]].inventory_hostname }}:6443{% endif %}/healthz
    validate_certs: no
    return_content: yes
  register: this
  until: "'ok' in this.content"
  retries: 10
  delay: 4
  connection: local
  ignore_errors: True
  when: systemd_file.changed