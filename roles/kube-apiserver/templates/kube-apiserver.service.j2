{%- set etcdnode=[] -%}
{%- if groups['etcd'] is not defined %}
    {%- for host in groups['master'] -%}
        {{ etcdnode.append(host) }}
    {%- endfor%}
{%- else%}
    {%- for host in groups['etcd'] -%}
        {{ etcdnode.append(host) }}
    {%- endfor%}
{%- endif %}

[Unit]
Description=Kubernetes API Server
Documentation=https://github.com/kubernetes/kubernetes

[Service]
ExecStart=/usr/local/bin/kube-apiserver \
  --authorization-mode=Node,RBAC \
  --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeClaimResize,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,Priority,PodPreset \
  --advertise-address={{ ansible_default_ipv4.address }} \
  --bind-address={{ kubernetes.apiserver.bind | default('0.0.0.0') }}  \
  --secure-port=6443 \
  --allow-privileged=true \
  --audit-log-maxage=30 \
  --audit-log-maxbackup=3 \
  --audit-log-maxsize=100 \
  --audit-log-path=/var/log/audit.log \
  --storage-backend=etcd3 \
  --etcd-cafile={{ ca.kubernetes.location }}/etcd/ca.crt \
  --etcd-certfile={{ ca.kubernetes.location }}/apiserver-etcd-client.crt \
  --etcd-keyfile={{ ca.kubernetes.location }}/apiserver-etcd-client.key \
  --etcd-servers={% for host in etcdnode %}https://{{ host }}:2379{% if not loop.last %},{% endif %}{% endfor %} \
  --event-ttl=1h \
  --enable-bootstrap-token-auth \
  --client-ca-file={{ ca.kubernetes.location }}/ca.crt \
  --kubelet-https \
  --kubelet-client-certificate={{ ca.kubernetes.location }}/apiserver-kubelet-client.crt \
  --kubelet-client-key={{ ca.kubernetes.location }}/apiserver-kubelet-client.key \
  --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname \
  --runtime-config=api/all,settings.k8s.io/v1alpha1=true \
  --service-cluster-ip-range={{ kubernetes.settings.SvcCIDR }} \
  --service-node-port-range={{ kubernetes.settings.NodePortRange }} \
  --service-account-key-file={{ ca.kubernetes.location }}/sa.pub \
  --tls-cert-file={{ ca.kubernetes.location }}/apiserver.crt \
  --tls-private-key-file={{ ca.kubernetes.location }}/apiserver.key \
  --requestheader-client-ca-file={{ ca.kubernetes.location }}/front-proxy-ca.crt \
  --requestheader-username-headers=X-Remote-User \
  --requestheader-group-headers=X-Remote-Group \
  --requestheader-allowed-names=front-proxy-client \
  --requestheader-extra-headers-prefix=X-Remote-Extra- \
  --proxy-client-cert-file={{ ca.kubernetes.location }}/front-proxy-client.crt \
  --proxy-client-key-file={{ ca.kubernetes.location }}/front-proxy-client.key \
{% if kubernetes.apiserver.log is defined %}
  --logtostderr=true \
  --log-dir={{ kubernetes.apiserver.log.logDir }} \
  --log-file={{ kubernetes.apiserver.log.logDir }}/{{ kubernetes.apiserver.log.logFile }} \
{% endif %}
  --v={{ kubernetes.apiserver.log.logLevel | default(2) }}

Restart=on-failure
RestartSec=5
LimitNOFILE=65536
[Install]
WantedBy=multi-user.target