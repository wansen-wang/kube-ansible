# docker config
docker:
  datadir: /var/lib/docker
  # auto create dockr primary partition
  # device: /dev/sdb
  # Convert the json format to yaml
  daemon:
    exec-opts:
      - "native.cgroupdriver=systemd"
    registry-mirrors:
      - "https://i3jtbyvy.mirror.aliyuncs.com"
    insecure-registries:
      - "0.0.0.0/0"
    storage-driver: "overlay2"
    storage-opts:
      - "overlay2.override_kernel_check=true"
    log-driver: "json-file"
    log-opts:
      max-size: "100m"
      max-file: "5"
    max-concurrent-downloads: 20
    max-concurrent-uploads: 10
    userland-proxy: false
    experimental: false
    icc: false
    debug: false
    features:
      buildkit: false
    builder:
      gc:
        enabled: true
        defaultKeepStorage: "20GB"
    default-ulimits:
      nofile:
        Name: nofile
        Hard: 65535
        Soft: 65535
      nproc:
        Name: nproc
        Hard: 65535
        Soft: 65535
      core:
        Name: core
        Hard: -1
        Soft: -1

# containerd config
containerd:
  datadir: /var/lib/containerd
  # auto create containerd primary partition
  # device: /dev/sdb
  daemon:
    sandbox_image: "registry.aliyuncs.com/google_containers/pause:3.5"
    endpoint:
      - "https://registry-1.docker.io"
      - "https://i3jtbyvy.mirror.aliyuncs.com"

# etcd config
etcd:
  datadir: /var/lib/etcd
  # auto create etcd primary partition
  # device: /dev/sdc
  backupDir: /etc/kubernetes/tmp
  extraArgs:
    - "--auto-compaction-retention=1"
    - "--max-request-bytes=33554432"
    - "--quota-backend-bytes=8589934592"
    - "--enable-v2=false"
    - "--snapshot-count=10000"
    - "--cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_GCM_SHA384"

# ha config
# none not use lb for apiserver
# slb is software load balancing, will install harpoxy and keepalived on master node
# clb is cloud load balancing, will use cloud load balancing
# ha:
#   type: slb
#   vip: 172.16.6.10
#   mask: 16

# loadBalancing is 4 layer forwarding to ingress by haproxy, only used in slb
# loadBalancing:
#   http:
#     src: 80
#     dest: 30001
#   https:
#     src: 443
#     dest: 30002

# kubernetes network config
networking:
  dnsDomain: cluster.local
  ## IPv4 or IPv6 stack
  serviceSubnet: "{{ inventory_hostname | ip | select('eq', '4', '10.96.0.0/12', 'fd74:ca9b:0172:0019::/110') }}"
  podSubnet: "{{ inventory_hostname | ip | select('eq', '4', '10.244.0.0/16', 'fd74:ca9b:0172:0018::/64') }}"
  ## IPv4/IPv6 dual-stack
  # serviceSubnet: 10.96.0.0/12,fd74:ca9b:0172:0019::/110
  # podSubnet: 10.244.0.0/16,fd74:ca9b:0172:0018::/64

# kube-apiserver config
apiServer:
  bindAddress: "0.0.0.0"
  encryption: Tsg7sO4Ki/W3s9bfwGfTi8ECcp+/3uDedQMq6rLQTIY= # head -c 32 /dev/urandom | base64
  certSANs:
    - "DNS:*.kubernetes.local"
  extraArgs:
    - "--event-ttl=4h"
    - "--anonymous-auth=false"
    - "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname"
    - "--service-node-port-range=30000-32767"
    - "--runtime-config=api/all=true"
    - "--authorization-mode=Node,RBAC"
    - "--profiling=false"
    - "--enable-admission-plugins=AlwaysPullImages,ServiceAccount,NamespaceLifecycle,NodeRestriction,LimitRanger,PersistentVolumeClaimResize,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,Priority"
    - "--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
    - "--feature-gates=TTLAfterFinished=true"
  log:
    level: 1

# kube-controller-manager config
controllerManager:
  bindAddress: "0.0.0.0"
  extraArgs:
    - "--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
    - "--terminated-pod-gc-threshold=12500"
    - "--node-monitor-period=5s"
    - "--node-monitor-grace-period=40s"
    - "--pod-eviction-timeout=5m0s"
    - "--profiling=false"
    - "--feature-gates=TTLAfterFinished=true"
    - "--kube-api-qps=100"
    - "--kube-api-burst=100"
  log:
    level: 1

# kube-scheduler config
scheduler:
  bindAddress: "0.0.0.0"
  extraArgs:
    - "--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
    - "--profiling=false"
    - "--feature-gates=TTLAfterFinished=true"
    - "--kube-api-qps=100"
  log:
    level: 1

# kubelet config
kubelet:
  bindAddress: "0.0.0.0"
  extraArgs:
    - "--pod-infra-container-image=registry.aliyuncs.com/google_containers/pause:3.5"
    - "--allowed-unsafe-sysctls=net.*"
    - "--network-plugin=cni"
  log:
    level: 1

# kube-proxy config
proxy:
  bindAddress: "0.0.0.0"
  extraArgs:
    - "--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
    - "--mode=ipvs"
  log:
    level: 1

# app not support all kubernetes version, please confirm apiVersion on manifests.
# app default is ipv4, if you want to deployment for ipv6, please change to ipv6 branch
# IPV4 app list:
## calico
## canal
## cilium
## coredns
## kube-flannel
## metrics
## traefik
# IPV6 app list:
## calico
## coredns
## metrics

apps:
  location: /etc/kubernetes/apps
  files:
    - {
        name: "metrics.yaml",
        url: "https://raw.githubusercontent.com/buxiaomo/kubernetes-sigs/{{ inventory_hostname | ip | select('eq', '4', 'ipv4', 'ipv6') }}/metrics.yaml"
      }
    - {
        name: "coredns.yaml",
        url: "https://raw.githubusercontent.com/buxiaomo/kubernetes-sigs/{{ inventory_hostname | ip | select('eq', '4', 'ipv4', 'ipv6') }}/coredns.yaml"
      }
    - {
        name: "calico.yaml",
        url: "https://raw.githubusercontent.com/buxiaomo/kubernetes-sigs/{{ inventory_hostname | ip | select('eq', '4', 'ipv4', 'ipv6') }}/calico.yaml"
      }
    # - {
    #     name: "traefik.yaml",
    #     url: "https://raw.githubusercontent.com/buxiaomo/kubernetes-sigs/main/traefik.yaml"
    #   }
    # - {
    #     name: "canal.yaml",
    #     url: "https://raw.githubusercontent.com/buxiaomo/kubernetes-sigs/main/canal.yaml"
    #   }
    # - {
    #     name: "flannel.yaml",
    #     url: "https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
    #   }
    # - {
    #     name: "cilium.yaml",
    #     url: "https://raw.githubusercontent.com/buxiaomo/kubernetes-sigs/main/cilium.yaml"
    #   }
    # - {
    #     name: "cert-manager.yaml",
    #     url: "https://github.com/jetstack/cert-manager/releases/download/v1.5.3/cert-manager.yaml"
    #   }


# 1.14, 1.15 https://docs.projectcalico.org/archive/v3.14/manifests/calico.yaml